name: Docker Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Construct the Docker image name
        id: set_name
        run: |
            DOCKER_IMAGE_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]'):test
            echo "DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME" >> "$GITHUB_ENV"
      - name: Push to Github Registry
        run: |
          echo ${{ github.token }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE_NAME --build-arg TARGETPLATFORM=$(uname -m) -f Dockerfile .
          echo "### Docker Build! :rocket:" >> $GITHUB_STEP_SUMMARY
        continue-on-error: false

      - name: Run Docker container
        run: |
          docker run -d -t -p 5000:5000 --name test $DOCKER_IMAGE_NAME 
          echo "To run on TPU, give permission like this: docker run -d -t -p 5000:5000 --privileged --user root -v /dev/bus/usb:/dev/bus/usb --name test_tpu $DOCKER_IMAGE_NAME"
        continue-on-error: false

      - name: Wait for container to start
        run: sleep 10

      - name: Test Docker container - Install Testing Dependencies
        run: |
          python tests/test_install_dependencies.py tests/test.py
  
        continue-on-error: false
      - name: Test Docker container - Run Test
        run: |
          python tests/test.py
        continue-on-error: false

      - name: Push Docker image to DockerHub - Login to Docker Hub
        if: success() 
        run: |
          echo ${{ secrets.DOCKERHUB_PAT }} | docker login --username ${{ vars.DOCKERHUB_USERNAME }} --password-stdin  
      - name: Push Docker Image to Docker Hub - Push
        if: success()
        run: |
          echo "DOCKER_IMAGE_NAME= $DOCKER_IMAGE_NAME"
          docker push $DOCKER_IMAGE_NAME
      

